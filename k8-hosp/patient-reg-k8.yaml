#                                              PriorityClass for Patient Registration
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: patregpc
value: 100000
globalDefault: false
description: "Priority class for Patient Registration"
---
#                                         PersistentVolumeClaim for dynamic volume provisioning
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: claim1
  namespace: prod
spec:
  storageClassName: standard 
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "700Mi"
---
#                                                     Deployment for the patient registration application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: patient-reg
  namespace: prod
  labels:
    app: patient
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0 
  selector:
    matchLabels:
      tier: patreg
  template:
    metadata:
      labels:
        tier: patreg
    spec:
      priorityClassName: patregpc
      terminationGracePeriodSeconds: 30 
      securityContext:
        runAsNonRoot: true
        runAsUser: 900
        fsGroup: 2000
      containers:
        - name: patregcon
          image: furkhan2000/shark:patient-registration
          imagePullPolicy: Always 
          ports:
            - containerPort: 5003
          resources:
            requests:
              cpu: "250m"
              memory: "300Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: patregvol
              mountPath: /patientstore
          readinessProbe:
            httpGet:
              path: /health
              port: 5003
            initialDelaySeconds: 5
            periodSeconds: 8
          livenessProbe:
            httpGet:
              path: /health
              port: 5003
            initialDelaySeconds: 15
            periodSeconds: 10
      volumes:
        - name: patregvol
          persistentVolumeClaim:
            claimName: claim1
---
#                                                            Service
apiVersion: v1
kind: Service
metadata:
  name: patsvc1
  namespace: prod
spec:
  selector:
    tier: patreg
  ports:
    - port: 5003
      targetPort: 5003
      protocol: TCP
---
#                                                                 Network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: urinenp
  namespace: prod
spec:
  podSelector:
    matchLabels:
      tier: patreg
  policyTypes:
    - ingress
    - egress
  ingress: [] 
  egress:
    - ports:
        - protocol: TCP
          port: 5002
        - protocol: TCP
          port: 5003
---
#                                                                 HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpapatient
  namespace: prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: patient-reg
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80 


